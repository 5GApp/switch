AM_P4FLAGS = --verbose 2 --o $(builddir)/$(P4_TARGET_DIR) --libpd
AM_P4FLAGS += --p4-name=$(P4_NAME)
AM_P4FLAGS += --pipe-mgr-path=pipe_mgr/ --mc-mgr-path=mc_mgr/
AM_P4FLAGS += --gen-exm-test-pd -S
AM_P4FLAGS += --p4-prefix=$(P4_PREFIX) $(P4FLAGS)

if IS_THRIFT_ENABLED
pdthriftpythondir = ${pythondir}/$(P4_NAME)_p4_pd_rpc
pdthriftpython_PYTHON = $(pd_python_sources) \
@builddir@/$(P4_TARGET_DIR)/api/gen-py/$(P4_NAME)_p4_pd_rpc/$(P4_PREFIX).py
endif

P4_TARGET ?= $(P4_NAME)
libpd_ladir = $(datadir)/p4/$(P4_TARGET)
libpd_la_DATA = \
@builddir@/$(P4_TARGET_DIR)/tofino.bin \
@builddir@/$(P4_TARGET_DIR)/context/mau.context.json \
@builddir@/$(P4_TARGET_DIR)/context/p4_name_lookup.json

P4C = p4c-tofino
# The recipe to invoke the p4c-tofino compiler is copied from:
# http://www.gnu.org/software/automake/manual/html_node/Multiple-Outputs.html
p4c.ts : $(P4_MAIN) $(P4_DEPS)
	@rm -f p4c.tmp
	@touch p4c.tmp
	$(P4C) $(AM_P4FLAGS) $(P4_MAIN)
	thrift -r --gen cpp -o $(builddir)/$(P4_TARGET_DIR)/api $(builddir)/$(P4_TARGET_DIR)/api/thrift/p4_pd_rpc.thrift
	mv -f $(builddir)/$(P4_TARGET_DIR)/api/gen-cpp/$(P4_PREFIX).h $(builddir)/$(P4_TARGET_DIR)/api/gen-cpp/p4_prefix.h
	sed --in-place 's/include "$(P4_PREFIX).h"/include "p4_prefix.h"/' $(builddir)/$(P4_TARGET_DIR)/api/gen-cpp/$(P4_PREFIX).cpp
	python $(srcdir)/split_pd_thrift.py $(builddir)/$(P4_TARGET_DIR)/api/gen-cpp/$(P4_PREFIX).cpp $(builddir)/$(P4_TARGET_DIR)/api/gen-cpp/ 3
	thrift -r --gen py -o $(builddir)/$(P4_TARGET_DIR)/api $(builddir)/$(P4_TARGET_DIR)/api/thrift/p4_pd_rpc.thrift
	rm -rf $(builddir)/$(P4_TARGET_DIR)/api/gen-py/$(P4_NAME)_p4_pd_rpc/
	mv $(builddir)/$(P4_TARGET_DIR)/api/gen-py/p4_pd_rpc $(builddir)/$(P4_TARGET_DIR)/api/gen-py/$(P4_NAME)_p4_pd_rpc/
	@mv -f p4c.tmp $@

$(BUILT_SOURCES) : p4c.ts
## Recover from the removal of $@
	@if test -f $@; then :; else \
	  trap 'rm -rf p4c.lock p4c.ts' 1 2 13 15; \
## mkdir is a portable test-and-set
	if mkdir p4c.lock 2>/dev/null; then \
## This code is being executed by the first process.
	  rm -f p4c.ts; \
	  $(MAKE) $(AM_MAKEFLAGS) p4c.ts; \
	  result=$$?; rm -rf p4c.lock; exit $$result; \
	else \
## This code is being executed by the follower processes.
## Wait until the first process is done.
	  while test -d p4c.lock; do sleep 1; done; \
## Succeed if and only if the first process succeeded.
	    test -f p4c.ts; \
	  fi; \
	fi

CLEANFILES = $(BUILT_SOURCES) p4c.ts
